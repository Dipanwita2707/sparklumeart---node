version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: sparklumeart:latest
    environment:
      - NODE_ENV=production
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=sparklumeart
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3000
      - SESSION_SECRET=your-secret-key
      - RAZORPAY_KEY_ID=your_razorpay_key_id
      - RAZORPAY_KEY_SECRET=your_razorpay_key_secret
    ports:
      - "3000:3000"
    volumes:
      - ./public:/app/public
      - ./uploads:/app/uploads
      - ./views:/app/views
    depends_on:
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:latest
    command: mongod --bind_ip_all
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

